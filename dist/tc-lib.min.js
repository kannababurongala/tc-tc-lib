angular.module("tcLib",["camera","ngDialog","ui.bootstrap"]),angular.module("tcLib").directive("bindHtmlCompile",["$compile",function(i){return{restrict:"A",link:function(t,n,e){t.$watch(function(){return t.$eval(e.bindHtmlCompile)},function(e){n.html(e),i(n.contents())(t)})}}}]),angular.module("tcLib").directive("tcCamera",["ngDialog",function(r){return{restrict:"A",require:"ngModel",scope:{onCapture:"&",confirmText:"@"},link:function(t,e,n,i){angular.element(e).bind("click",function(){t.capturePhoto()}),t.autoClose=!t.confirmText,t.setModel=function(e){t.tempModel=e},t.setConfirmed=function(e){t.confirmed=e},t.capturePhoto=function(){r.open({template:"app/camera/camera-modal.html",className:"ngdialog-theme-default ngdialog-lg",controller:"cameraModelCtrl",scope:t}).closePromise.then(function(){"function"==typeof t.onCapture&&(t.confirmed&&i.$setViewValue(t.tempModel),t.onCapture({$snap:t.tempModel}))})}}}}]),angular.module("tcLib").controller("cameraModelCtrl",["$scope","ngDialog",function(t,e){t.onCamCapture=function(e){t.setModel(e),t.autoClose&&t.confirm()},t.confirm=function(){t.setConfirmed(!0)},t.cancel=function(){t.setConfirmed(!1)}}]),angular.module("tcLib").directive("clickAndDisable",[function(){return{restrict:"A",scope:{clickAndDisable:"&"},link:function(e,t,n){t.bind("click",function(){e.clickAndDisable=e.clickAndDisable||$timeout(angular.noop,5e3),t.prop("disabled",!0),e.clickAndDisable().finally(function(){t.prop("disabled",!1)})})}}}]),angular.module("tcLib").directive("tcDatePicker",["$parse",function(s){return{restrict:"E",scope:{name:"@",options:"=?",placeholder:"@",model:"=ngModel"},templateUrl:"app/date-picker/date-picker.html",link:function(r,e,t){function n(e){var t=e.date;if("day"===e.mode)for(var n=new Date(t).setHours(0,0,0,0),i=0;i<(s("events.length")(r)||0);i++){if(n===new Date($scope.events[i].date).setHours(0,0,0,0))return $scope.events[i].status}return""}r.calendarPanel={opened:!1},r.openCalendar=function(){r.calendarPanel.opened=!0},r.$watch("options",function(e,t){r.dateOptions={formatYear:"yy",showWeeks:!1,customClass:n,minDate:s("options.minDate")(r)||null,maxDate:s("options.maxDate")(r)||new Date(2040,12,31),startingDay:1}})}}}]),angular.module("tcLib").directive("tcFileInput",[function(){return{restrict:"AE",require:"ngModel",scope:{ngModel:"="},link:function(e,n,i,r){n.on("change",function(e){var t=n[0].files;r.$setViewValue(null),i.multiple?r.$setViewValue(t.length?t:null):r.$setViewValue(t[0])})}}}]),angular.module("tcLib").service("casesheet",["httpService",function(t){this.save=function(e){return t.post("casesheet/saveorupdate",e)},this.caseSheetList=function(e){return t.get("casesheet/search",{opPatientId:e})}}]),angular.module("tcLib").service("companyService",["httpService",function(t){this.save=function(e){return t.post("company/saveorupdate",e)},this.companiesList=function(){return t.get("company/list")}}]),angular.module("tcLib").service("complaintService",["httpService",function(t){this.saveComplaint=function(e){return t.post("complaint/save",e)},this.saveComplaintTransationm=function(e){return t.post("complaint/transact/saveorupdate",e)},this.complaintMastersList=function(e){return t.get("complaint/search",{patientId:e})},this.complaintTransactList=function(e){return t.get("complaint/transact/search",{patientId:e})}}]),angular.module("tcLib").service("drugFormulae",["httpService",function(t){this.save=function(e){return t.post("drugFormulae/saveorupdate",e)},this.drugFormulaeList=function(){return t.get("drugFormulae/list")}}]),angular.module("tcLib").provider("httpService",function(){var a="";try{a=location.href.split("/")[3]}catch(e){a=""}this.setBasePath=function(e){a=e},this.$get=["$http","$q",function(n,i){return{get:r.bind(null,"GET"),del:r.bind(null,"DELETE"),put:e.bind(null,"PUT"),post:e.bind(null,"POST"),upload:function(e,t,n,i,r){return o({url:t=s(t,i,r),method:e,data:n,transformRequest:angular.identity,headers:{"Content-Type":void 0}})}.bind(null,"POST"),getJSON:function(e,t,n){return n&&localStorage.getItem(n)?i.when(null).then(function(){var e=localStorage.getItem(n);return JSON.parse(e)}):r(e,t).then(function(e){return localStorage.setItem(n,e.json),e})}.bind(null,"GET")};function r(e,t,n,i){return o({method:e,url:t=s(t,n,i)})}function e(e,t,n,i,r){return o({method:e,url:t=s(t,i,r),data:n})}function s(e,t,n){return t&&(e+="?"+toURLParams(t,n)),"/"+a+"/"+e}function o(e){var t=i.defer();return n(e).success(function(e){e.isSuccess?t.resolve(e.response):t.reject(e)}).error(function(e){t.reject(e)}),t.promise}}]}),angular.module("tcLib").service("locationService",["httpService",function(t){this.save=function(e){return t.post("location/saveorupdate",e)},this.locationsList=function(){return t.get("location/list")}}]),angular.module("tcLib").service("medicineCategoryService",["httpService",function(t){this.save=function(e){return t.post("medicinecategory/saveorupdate",e)},this.medicineCategoryList=function(){return t.get("medicinecategory/list")}}]),angular.module("tcLib").service("medicineCategoryByDoctorService",["httpService",function(t){this.save=function(e){return t.post("medicinecategorybydoctor/saveorupdate",e)},this.medicineCategoryByDoctorList=function(){return t.get("medicinecategorybydoctor/list")}}]),angular.module("tcLib").service("medicineService",["httpService",function(t){this.save=function(e){return t.post("medicine/saveorupdate",e)},this.medicinesList=function(e){return t.get("medicine/list",{id:e})},this.medicineViewList=function(e){return t.get("medicine/listbyoptions",e)}}]),angular.module("tcLib").service("opPatientService",["httpService",function(t){this.save=function(e){return t.post("oppatient/createorupdate",e)},this.getOpPatientsListByOptions=function(e){return t.post("oppatient/listbyoptions",e)},this.getOpPatientByPatientId=function(e){return t.get("oppatient/getoppatientbyid/"+e)},this.getOpPatientCountWithStatusByOpId=function(e){return t.get("oppatient/statuscount/{opId}",e)},this.getOrCreatePatientCard=function(e){return t.post("oppatient/patient-card",e)},this.createPatientCard=function(e){return t.post("oppatient/patient-card/new",e)}}]),angular.module("tcLib").service("opPrescriptionService",["httpService",function(t){this.save=function(e){return t.post("opprescription/saveorupdate",e)},this.searchPurchaseMedicines=function(e){return t.get("opprescription/medicine-search",e)},this.opPrescriptionList=function(e){return t.get("opprescription/list",e)}}]),angular.module("tcLib").service("opService",["httpService",function(t){this.create=function(e){return t.post("op/create",e)},this.search=function(e){return t.post("op/op-list",e)},this.get=function(e){return t.get("op/get/"+e)},this.statusList=function(e){return t.get("op/op-status-list",{date:e})},this.configCreate=function(e){return t.post("op/config/create",e)},this.configList=function(){return t.get("op/config/list")}}]),angular.module("tcLib").service("patientService",["httpService",function(t){this.save=function(e){return t.post("patient/saveorupdate",e)},this.patientsListByOptions=function(e){return t.get("patient/listbyoptions",e)},this.imageData=function(e){return t.get("patient/getphoto",e)}}]),angular.module("tcLib").service("purchasebillMedicineService",["httpService",function(t){this.purchaseBillMedicines=function(e){return t.get("purchasebillmedicine/search",e)},this.alertInfo=function(e){return t.get("purchasebillmedicine/alertinfo",e)},this.pendingBillMedicines=function(e){return t.get("purchasebillmedicine/pendingbills",{billId:e})}}]),angular.module("tcLib").service("purchasebillService",["httpService",function(t){this.createPurchaseBill=function(e){return t.post("purchasebill/save",e)},this.purchaseBillById=function(e){return t.get("purchasebill/get/{id}"+e)},this.purchaseBillsListByOptions=function(e){return t.get("purchasebill/search",e)},this.purchaseTotal=function(e){return t.get("purchasebill/total",e)},this.createPurchaseBillPayment=function(e){return t.post("purchasebill/payment/save",e)},this.purchaseBillPaymentList=function(e){return t.get("purchasebill/payment/search",e)},this.createPurchaseBillReturn=function(e){return t.post("purchasebill/return/save",e)},this.purchaseReturns=function(e){return t.get("purchasebill/returns/get",e)},this.purchaseReturnMedicines=function(e){return t.get("purchasebill/return/medicines/get",e)},this.uploadPurchaseBill=function(e){return t.post("purchasebill/upload/{billId}",e)}}]),angular.module("tcLib").service("reportsService",["httpService",function(t){this.salesReports=function(e){return t.get("reports/sales/bills",e)},this.salesReturnReports=function(e){return t.get("reports/sales/returns",e)},this.salesPaymentReports=function(e){return t.get("reports/sales/payments",e)},this.purchaseReports=function(e){return t.get("reports/purchase",e)},this.salesTransactions=function(e){return t.get("reports/salesPayments",e)},this.purchaseTransactions=function(e){return t.get("reports/purchaseTransactions",e)},this.paymentTransactionsByDateRange=function(e){return t.post("reports/create",e)},this.adjustMrpByDateRange=function(e){return t.post("reports/adjustMrp",e)},this.adjustUnitsOrAvailability=function(e){return t.post("reports/adjustunitsoravailability",e)}}]),angular.module("tcLib").service("representativeService",["httpService",function(t){this.save=function(e){return t.post("representative/saveorupdate",e)},this.representativesList=function(){return t.get("representative/list")}}]),angular.module("tcLib").service("salesbillService",["httpService",function(t){this.create=function(e){return t.post("salesbill/save",e)},this.salesBillsListByOptions=function(e){return t.get("salesbill/list",e)},this.salesAmount=function(e){return t.get("salesbill/total",e)},this.medicineSearch=function(e){return t.get("salesbill/medicines/search",e)},this.createSalesBillPayment=function(e){return t.post("salesbill/payment/save",e)},this.paymentsList=function(e){return t.get("salesbill/payment/search",{billId:e})},this.createSalesBillReturn=function(e){return t.post("salesbill/return/save",e)},this.returnsList=function(e){return t.get("salesbill/return/search",e)},this.prescriptionsList=function(e){return t.get("salesbill/prescription/search",e)},this.savePrescriptionSale=function(e){return t.post("salesbill/prescription/save/{prescriptionId}",e)},this.createPrescriptionSale=function(e){return t.post("salesbill/prescription/add",e)},this.salesReturnTotal=function(e){return t.get("salesbill/returns/total",e)},this.configCreate=configCreate,this.configList=configList}]),angular.module("tcLib").service("supplierService",["httpService",function(t){this.save=function(e){return t.post("supplier/saveorupdate",e)},this.suppliersList=function(){return t.get("supplier/list")}}]),angular.module("tcLib").run(["$templateCache",function(e){e.put("src/camera/camera-modal.html",'<div class="camera-wrapper row"><ng-camera capture-message="Done!" class="grid-md-5" countdown="3" output-height="240" output-width="320" viewer-height="315" viewer-width="420" image-format="jpeg" jpeg-quality="100" action-message="Take picture" snapshot="model" overlay-url="./assets/images/overlay.png" shutter-url="./assets/sounds/camera-click.mp3" on-capture="onCamCapture($snap)"></ng-camera><div class="preview-wrapper grid-md-5" ng-if="model"><img ng-src="{{model}}" alt="Click capture to see preview"><div class="grid-md-4 ngdialog-buttons"><button class="btn btn-md btn-green" ng-if="confirmText && model" ng-click="confirm();closeThisDialog(0)">{{confirmText}}</button> <button class="btn btn-md btn-grey" ng-if="confirmText" ng-click="cancel();closeThisDialog(0);">Cancel</button></div></div></div>'),e.put("src/date-picker/date-picker.html",'<input placeholder="{{placeholder}}" class="form-field grid-md-12" ng-attr-name="{{name}}" ng-model="model" uib-datepicker-popup is-open="calendarPanel.opened" datepicker-options="dateOptions" ng-required="{{required}}" close-text="Close"> <span class="form-field-icon"><button type="button" class="btn btn-sm btn-sky-blue" ng-click="openCalendar()"><i class="fa fa-calendar"></i></button></span>')}]),angular.module("tcLib").directive("whenScrolled",function(){return{restrict:"A",scope:{scrollerApi:"=?",whenScrolled:"&"},link:function(e,t,n){var i=0;raw=t[0],t.bind("scroll",function(){i<raw.scrollTop&&raw.scrollTop+raw.offsetHeight>=raw.scrollHeight&&(e.whenScrolled(),i=raw.scrollTop)}),e.scrollerApi={resetScroll:function(){i=0,raw.scrollTop=0}}}}});